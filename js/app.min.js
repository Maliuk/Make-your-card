"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function postImageToFacebook(t,e,o,n,a){var i=new FormData;i.append("access_token",t),i.append("source",n),i.append("no_story",!0),$(".preloader").removeClass("disable"),$.ajax({url:"https://graph.facebook.com/me/photos?access_token="+t,type:"POST",data:i,processData:!1,contentType:!1,cache:!1,success:function(t){console.log("success: ",t),FB.api("/"+t.id+"?fields=images",function(t){t&&!t.error&&FB.api("/me/feed","POST",{message:"",picture:t.images[0].source,link:t.images[0].source,name:"Try to do the same",description:a,privacy:{value:"SELF"}},function(t){t&&!t.error&&(console.log("Posted story to facebook"),console.log(t),$(".preloader").addClass("disable"),$(".pr-modal .pr-body").html('<h2 class="text-center">Shared on facebook</h2>'),$(".pr-modal").addClass("shown"))})})},error:function(t,e,o){console.log("error "+o+" Status "+t.status)},complete:function(t){console.log("Post to facebook Complete")}})}function dataURItoBlob(t){var e;e=t.split(",")[0].indexOf("base64")>=0?atob(t.split(",")[1]):unescape(t.split(",")[1]);for(var o=t.split(",")[0].split(":")[1].split(";")[0],n=new Uint8Array(e.length),a=0;a<e.length;a++)n[a]=e.charCodeAt(a);return new Blob([n],{type:o})}var _createClass=function(){function t(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,o,n){return o&&t(e.prototype,o),n&&t(e,n),e}}(),ImageItem=function(){function t(e){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,r=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"";_classCallCheck(this,t),this.url=e,this.text=r,this.textW=o,this.textH=n,this.top=a,this.left=i,this.rotate=s}return _createClass(t,[{key:"appendToDomElement",value:function(){var t='<div class="pr-body"><img id="pr-image" src="'+this.url+'" /><div id="pr-text">'+this.text+"</div></div>";$("#preview").html(t),$("#pr-text").css({width:this.textW,height:this.textH,top:this.top,left:this.left,"-webkit-transform":"rotate("+this.rotate+")","-moz-transform":"rotate("+this.rotate+")","-ms-transform":"rotate("+this.rotate+")","-o-transform":"rotate("+this.rotate+")",transform:"rotate("+this.rotate+")"}),$("#mini-image img, #mini-result img").attr("src",this.url)}},{key:"setText",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.text=t,$("#pr-text").html(this.text)}},{key:"getText",value:function(){return this.text}},{key:"saveImage",value:function(){var t=void 0;$("a").is("#download")?t=$("a#download").get(0):(t=document.createElement("a"),t.innerHTML="download image",t.id="download",t.download="noname.png",document.body.appendChild(t)),$("div").is("#preview")&&html2canvas($("#preview"),{onrendered:function(e){$(t).attr("href",e.toDataURL()),t.click()}})}},{key:"shareFB",value:function(){html2canvas($("#preview"),{onrendered:function(t){var e=t.toDataURL("image/png");try{var o=dataURItoBlob(e)}catch(t){console.log(t)}FB.getLoginStatus(function(t){console.log(t),"connected"===t.status?postImageToFacebook(t.authResponse.accessToken,"Canvas to Facebook","image/png",o,"http://bit.ly/1QK0Qbsz"):(t.status,FB.login(function(t){postImageToFacebook(t.authResponse.accessToken,"Canvas to Facebook","image/png",o,"http://bit.ly/1QK0Qbsz")},{scope:"publish_actions"}))})}})}}]),t}(),Main=function(){function t(){_classCallCheck(this,t),this.image,this.windowLoad(),this.editPageEvents(),this.saveImage(),this.shareImage()}return _createClass(t,[{key:"windowLoad",value:function(){$(".items .item-image").each(function(){var t=$("img",this).attr("src");t&&($(this).css("background-image",'url("'+t+'")'),$("img",this).remove())}),$(window).load(function(){$(".scrollbar").mCustomScrollbar({axis:"xy",theme:"inset-2-dark"}),$(".preloader").addClass("disable")}),$(".items .item-frame").click(function(t){t.preventDefault();var e={url:$(this).data("url"),textWidth:$(this).data("text-width"),textHeight:$(this).data("text-height"),top:$(this).data("top"),left:$(this).data("left"),rotate:$(this).data("rotate")};try{sessionStorage.setItem("image",JSON.stringify(e)),window.location="/edit.html"}catch(t){console.log(t)}})}},{key:"editPageEvents",value:function(){var t=null,e=function(){t&&clearTimeout(t),t=setTimeout(function(){html2canvas($("#preview"),{onrendered:function(t){$("#mini-result .item-image").html(t)}})},1e3)};if(window.location.toString().indexOf("edit.html")>-1&&!sessionStorage.getItem("image")&&(window.location="/"),$("div").is("#preview")&&sessionStorage.getItem("image")){var o=JSON.parse(sessionStorage.getItem("image")),n=new ImageItem(o.url,o.textWidth,o.textHeight,o.top,o.left,o.rotate);this.image=n,n.appendToDomElement(),$("#input-text").on("keyup",function(){$("#mini-text .item-image").html($(this).html()),n.setText($(this).html()),e()}),$("#input-text").keydown(function(t){if(13===t.keyCode)return document.execCommand("insertHTML",!1,"<br><br>"),!1}),$("#input-text, #pr-text, #mini-text").css("font-family",$("#select-font").val()),$("#select-font").on("change",function(){$("#input-text, #pr-text, #mini-text").css("font-family",$(this).val()),e()}),$("#font-size").on("change",function(){$("#input-text, #pr-text").css("font-size",$(this).val()+"px"),e()});new CP(document.querySelector("input#font-color")).on("change",function(t){this.target.value="#"+t,$("#input-text, #pr-text, #mini-text").css("color","#"+t),e()}),$("#mini-result").click(function(){html2canvas($("#preview"),{onrendered:function(t){$(".pr-modal .pr-body").html(t),$(".pr-modal").addClass("shown")}})}),$(".pr-modal").click(function(){$(this).removeClass("shown")})}}},{key:"saveImage",value:function(){var t=this;this.image&&$("#btn-download").on("click",function(e){e.preventDefault(),t.image.saveImage()})}},{key:"shareImage",value:function(){var t=this;this.image&&$("#btn-poster").on("click",function(e){e.preventDefault(),t.image.shareFB()})}}]),t}();$.noConflict(),window.$=jQuery,jQuery(document).ready(function(t){new Main,window.fbAsyncInit=function(){FB.init({appId:"1328361773895736",status:!0,cookie:!0,xfbml:!0,channelUrl:"//demo.yoursites.online",version:"v2.8"})},function(t,e,o){var n,a=t.getElementsByTagName(e)[0];t.getElementById(o)||(n=t.createElement(e),n.id=o,n.src="//connect.facebook.net/en_US/sdk.js",a.parentNode.insertBefore(n,a))}(document,"script","facebook-jssdk")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
