'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ImageItem = function () {
    function ImageItem(url) {
        var textW = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
        var textH = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;
        var top = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var left = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
        var rotate = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
        var text = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : "";

        _classCallCheck(this, ImageItem);

        this.url = url;
        this.text = text;
        this.textW = textW;
        this.textH = textH;
        this.top = top;
        this.left = left;
        this.rotate = rotate;
    }

    _createClass(ImageItem, [{
        key: 'appendToDomElement',
        value: function appendToDomElement() {
            var html = '<div class="pr-body">' + '<img id="pr-image" src="' + this.url + '" />' + '<div id="pr-text">' + 'Integer semper ut libero vel aliquet. Cras vel ipsum sed nibh vestibulum lacinia. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Duis in quam dapibus, iaculis libero ac, vestibulum odio. Phasellus fermentum sapien at magna faucibus, ac convallis velit ultricies. Morbi eget enim vel elit cursus ultrices id quis nisl. Cras maximus facilisis venenatis.' + '</div>' + '</div>';
            $('#preview').html(html);

            $('#pr-text').css({
                'width': this.textW,
                'height': this.textH,
                'top': this.top,
                'left': this.left,
                '-webkit-transform': 'rotate(' + this.rotate + ')',
                '-moz-transform': 'rotate(' + this.rotate + ')',
                '-ms-transform': 'rotate(' + this.rotate + ')',
                '-o-transform': 'rotate(' + this.rotate + ')',
                'transform': 'rotate(' + this.rotate + ')'
            });

            $('#mini-image .item-image, #mini-result .item-image').css('background-image', 'url("' + this.url + '")');
        }
    }, {
        key: 'setText',
        value: function setText() {
            var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

            this.text = text;
            $('#pr-text').html(this.text);
        }
    }, {
        key: 'getText',
        value: function getText() {
            return this.text;
        }
    }]);

    return ImageItem;
}();

var Main = function Main() {
    _classCallCheck(this, Main);
};

$.noConflict();
window.$ = jQuery;
jQuery(document).ready(function ($) {

    $('.item-image').each(function () {
        var imgSrc = $('img', this).attr('src');
        if (imgSrc) {
            $(this).css('background-image', 'url("' + imgSrc + '")');
            $('img', this).remove();
        }
    });

    $(window).load(function () {
        $('.items .item-frame').each(function (i) {
            var _this = this;
            setTimeout(function () {
                $(_this).addClass('animate');
            }, i * 50);
        });

        $(".scrollbar").mCustomScrollbar({
            axis: "xy",
            theme: "inset-2-dark"
        });
    });

    $('.items .item-frame').click(function (e) {
        e.preventDefault();

        var image = {
            url: $(this).data('url'),
            textWidth: $(this).data('text-width'),
            textHeight: $(this).data('text-height'),
            top: $(this).data('top'),
            left: $(this).data('left'),
            rotate: $(this).data('rotate')
        };

        try {
            sessionStorage.setItem('image', JSON.stringify(image));
            window.location = "/edit.html";
        } catch (ex) {
            console.log(ex);
        }
    });

    (function () {
        if (window.location.toString().indexOf('edit.html') > -1 && !sessionStorage.getItem('image')) {
            window.location = "/";
        }

        if ($("div").is("#preview") && sessionStorage.getItem('image')) {
            var image = JSON.parse(sessionStorage.getItem('image'));
            var imgObj = new ImageItem(image.url, image.textWidth, image.textHeight, image.top, image.left, image.rotate);
            imgObj.appendToDomElement();

            $('#input-text').on("keyup", function () {
                $('#mini-text .item-image').html($(this).html());
                imgObj.setText($(this).html());

                html2canvas($("#preview"), {
                    onrendered: function onrendered(canvas) {
                        document.body.appendChild(canvas);
                        $('#mini-result .item-image').html(canvas);
                    }
                });
            });
        }
    })();

    var link = document.createElement('a');
    link.innerHTML = 'download image';
    link.id = 'download';
    link.download = "mypainting.png";
    document.body.appendChild(link);

    $('.btn').on("click", function (e) {
        e.preventDefault();
        var _this = this;

        if (!$("div").is("#preview")) return;
        html2canvas($("#preview"), {
            onrendered: function onrendered(canvas) {
                document.body.appendChild(canvas);

                link.href = canvas.toDataURL();
                link.click();

                //var image = canvas.toDataURL('image/jpeg', 0.5);
                //var image = canvas.toDataURL('image/jpeg', 1.0).replace("image/jpeg", "image/octet-stream");  // here is the most important part because if you dont replace you will get a DOM 18 exception.
                //window.location.href = image; // it will save locally

                //$(_this).href(canvas.toDataURL('image/jpeg', 1.0));
            }
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
